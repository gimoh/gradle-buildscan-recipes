buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
    }
}

plugins {
   id 'com.gradle.build-scan' version '1.10.1'
   id 'me.champeau.buildscan-recipes' version '0.2.0'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
    publishAlways()
}

buildScanRecipes {
    recipes 'git-status', 'git-diff-to-gist', 'travis-ci'
    recipe 'git-commit', baseUrl: 'https://github.com/melix/gradle-buildscan-recipes/tree'
}


apply plugin: 'groovy'
apply plugin: 'idea'

group = 'me.champeau.gradle'

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    compile 'com.gradle:build-scan-plugin:1.10.1'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

processResources {
    expand(version: version)
}

task compileRecipeClasspath {
    ext.classpathFile = file("$buildDir/classpath.txt")
    inputs.files(configurations.compile, compileGroovy.destinationDir)
    outputs.file(ext.classpathFile)

    doLast {
        classpathFile.text = files(configurations.compile, compileGroovy.destinationDir).asPath
    }
}

task compileRecipes(type: GroovyCompile) {
    dependsOn compileGroovy, compileRecipeClasspath
    source = files("src/recipes")
    groovyClasspath = compileGroovy.groovyClasspath
    classpath = files(compileGroovy.destinationDir, configurations.compile)
    destinationDir = file("$buildDir/recipes")
    groovyOptions.configurationScript = file('recipes-config.groovy')
}

jar {
    dependsOn compileRecipes
    from(compileRecipes.destinationDir)
}

apply from: 'gradle/publish.gradle'
